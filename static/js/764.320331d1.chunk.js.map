{"version":3,"file":"static/js/764.320331d1.chunk.js","mappings":"gOAgDA,UA5Ce,WAAO,IAAD,EACbA,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC/C,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KASMC,EAAiB,mCAAG,gHAECC,EAAAA,EAAAA,IAAiBN,GAFlB,gBAEdO,EAFc,EAEdA,KACRH,EAAgBG,EAAKC,SAHC,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDASvB,OACE,4BACE,kBAAOC,MAAOX,EAAWY,SAlBL,SAAAC,GACtB,GAAyB,KAArBA,EAAIC,OAAOH,MACb,OAAOZ,EAAgB,CAAC,GAE1BA,EAAgB,CAAEgB,MAAOF,EAAIC,OAAOH,OACrC,EAauDK,KAAK,UACzD,mBAAQA,KAAK,SAASC,QAASZ,EAA/B,SAAkD,YAGlD,wBACGF,GACCA,EAAae,KAAI,SAAAC,GACf,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM5B,GAAnD,SACGwB,EAAMK,SAFFL,EAAME,GAMlB,QAIV,C,8LC5CYI,EAAmB,mCAAG,uGAElBC,EAAAA,EAAAA,IACX,4FAH6B,8EAMzB,IAAIC,MAAM,KAAIC,SANW,wDAAH,qDAUnBC,EAAiB,mCAAG,WAAMR,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,6CAC2BL,EAD3B,8CAFgB,8EAMvB,IAAIM,MAAM,KAAIC,SANS,wDAAH,sDAUjBE,EAAiB,mCAAG,WAAMT,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,6CAC2BL,EAD3B,sDAFgB,8EAMvB,IAAIM,MAAM,KAAIC,SANS,wDAAH,sDAUjBG,EAAiB,mCAAG,WAAMV,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,6CAC2BL,EAD3B,sDAFgB,8EAMvB,IAAIM,MAAM,KAAIC,SANS,wDAAH,sDAUjBtB,EAAgB,mCAAG,WAAMS,GAAN,0FAEfW,EAAAA,EAAAA,IAAA,0DACwCX,EADxC,8CAFe,8EAMtB,IAAIY,MAAM,KAAIC,SANQ,wDAAH,qD","sources":["pages/Movies.js","services/theMovieDB-API.js"],"sourcesContent":["import { useState } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'services/theMovieDB-API';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryName = searchParams.get('query') ?? '';\n  const [searchMovies, setSearchMovies] = useState(null);\n\n  const updateQueryName = evt => {\n    if (evt.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: evt.target.value });\n  };\n\n  const findMoviesByQuery = async () => {\n    try {\n      const { data } = await fetchMovieSearch(queryName);\n      setSearchMovies(data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <input value={queryName} onChange={updateQueryName} type=\"text\" />\n      <button type=\"button\" onClick={findMoviesByQuery}>\n        Search\n      </button>\n      <ul>\n        {searchMovies &&\n          searchMovies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </NavLink>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=40e15dc62f9875135cfe2bf57a204366'\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n"],"names":["location","useLocation","useSearchParams","searchParams","setSearchParams","queryName","get","useState","searchMovies","setSearchMovies","findMoviesByQuery","fetchMovieSearch","data","results","console","log","value","onChange","evt","target","query","type","onClick","map","movie","to","id","state","from","title","fetchTrendingMovies","axios","Error","message","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}