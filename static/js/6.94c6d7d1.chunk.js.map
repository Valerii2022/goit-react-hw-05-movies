{"version":3,"file":"static/js/6.94c6d7d1.chunk.js","mappings":"6SAGaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAOD,EAAAA,GAAAA,GAAH,kFAMJE,EAAWF,EAAAA,GAAAA,GAAH,sHAQRG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,2nBAmBVK,EAAeL,EAAAA,GAAAA,IAAH,2E,4LCtCZM,EAAQN,EAAAA,GAAAA,MAAH,4QAcLO,EAAYP,EAAAA,GAAAA,OAAH,6T,SC6CtB,EAtDe,WAAO,IAAD,EACbQ,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC/C,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCF,EAAAA,EAAAA,UAASF,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAEAC,QAAQC,IAAIL,GAEZ,IAIMM,EAAiB,mCAAG,6FACxBV,EAAgB,CAAEW,MAAOL,IADD,mBAGCM,EAAAA,EAAAA,IAAiBN,GAHlB,gBAIM,KADpBO,EAHc,EAGdA,MACCC,QAAQC,OACfC,IAAAA,OAAAA,QACE,oEAGFX,EAAgBQ,EAAKC,SATD,gDAYtBN,QAAQC,IAAR,MAZsB,yDAAH,qDAgBvB,OACE,UAAC,KAAD,YACE,SAACf,EAAD,CAAOuB,MAAOX,EAAcY,SAtBR,SAAAC,GACtBZ,EAAgBY,EAAIC,OAAOH,MAC5B,EAoB0DI,KAAK,UAC5D,SAAC1B,EAAD,CAAW0B,KAAK,SAASC,QAASZ,EAAlC,SAAqD,YAGrD,SAAC,KAAD,UACGN,GACCA,EAAamB,KAAI,SAAAC,GACf,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMhC,GAFjB,SAIG4B,EAAMK,SALIL,EAAME,GASxB,QAIV,C,8LCzDYI,EAAmB,mCAAG,uGAElBC,EAAAA,EAAAA,IACX,4FAH6B,8EAMzB,IAAIC,MAAM,KAAIC,SANW,wDAAH,qDAUnBC,EAAiB,mCAAG,WAAMR,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,6CAC2BL,EAD3B,8CAFgB,8EAMvB,IAAIM,MAAM,KAAIC,SANS,wDAAH,sDAUjBE,EAAiB,mCAAG,WAAMT,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,6CAC2BL,EAD3B,sDAFgB,8EAMvB,IAAIM,MAAM,KAAIC,SANS,wDAAH,sDAUjBG,EAAiB,mCAAG,WAAMV,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,6CAC2BL,EAD3B,sDAFgB,8EAMvB,IAAIM,MAAM,KAAIC,SANS,wDAAH,sDAUjBrB,EAAgB,mCAAG,WAAMD,GAAN,0FAEfoB,EAAAA,EAAAA,IAAA,0DACwCpB,EADxC,8CAFe,8EAMtB,IAAIqB,MAAM,KAAIC,SANQ,wDAAH,qD","sources":["pages/Command.styled.js","pages/Movies.styled.js","pages/MoviesPage.jsx","services/theMovieDB-API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  transition: color 250ms linear;\n  &:hover {\n    color: #0070ba;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap:10px;\n  color: black;\n  text-decoration: none;\n  transition: color 250ms linear;\n  &:hover,\n  &.active {\n    color: #0070ba;\n  }\n  &::before{\n    content: \"\\\";\n    width: 6px;\n    height: 6px;\n    background-color: currentColor;\n  }\n`;\n\nexport const BlockWrapper = styled.div`\n  box-shadow: 0 2px 4px #8e8e8e;\n  padding: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  font-size: 18px;\n  padding: 5px;\n  margin-bottom: 20px;\n  margin-right: 10px;\n  border-radius: 3px;\n  outline: none;\n  border: 1px solid #000;\n  &:focus-visible {\n    border: 1px solid #0070ba;\n    box-shadow: 0 0 2px #0070ba;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  font-size: 18px;\n  padding: 5px;\n  cursor: pointer;\n  border: 1px solid #000;\n  border-radius: 3px;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover {\n    color: #fff;\n    background-color: #0070ba;\n    outline: none;\n    border: 1px solid #0070ba;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'services/theMovieDB-API';\nimport { Container, List, StyledLink, ListItem } from './Command.styled';\nimport { Input, SearchBtn } from './Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryName = searchParams.get('query') ?? '';\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [currentQuery, setCurrentQuery] = useState(queryName);\n\n  console.log(searchMovies);\n\n  const updateQueryName = evt => {\n    setCurrentQuery(evt.target.value);\n  };\n\n  const findMoviesByQuery = async () => {\n    setSearchParams({ query: currentQuery });\n    try {\n      const { data } = await fetchMovieSearch(currentQuery);\n      if (data.results.length === 0) {\n        Notiflix.Notify.failure(\n          'There are no movies matching you search query. Please try again.'\n        );\n      } else {\n        setSearchMovies(data.results);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Input value={currentQuery} onChange={updateQueryName} type=\"text\" />\n      <SearchBtn type=\"submit\" onClick={findMoviesByQuery}>\n        Search\n      </SearchBtn>\n      <List>\n        {searchMovies &&\n          searchMovies.map(movie => {\n            return (\n              <ListItem key={movie.id}>\n                <StyledLink\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title}\n                </StyledLink>\n              </ListItem>\n            );\n          })}\n      </List>\n    </Container>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=40e15dc62f9875135cfe2bf57a204366'\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n"],"names":["Container","styled","List","ListItem","StyledLink","NavLink","BlockWrapper","Input","SearchBtn","location","useLocation","useSearchParams","searchParams","setSearchParams","queryName","get","useState","searchMovies","setSearchMovies","currentQuery","setCurrentQuery","console","log","findMoviesByQuery","query","fetchMovieSearch","data","results","length","Notiflix","value","onChange","evt","target","type","onClick","map","movie","to","id","state","from","title","fetchTrendingMovies","axios","Error","message","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}