{"version":3,"file":"static/js/566.4b502508.chunk.js","mappings":"+SAGaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAOD,EAAAA,GAAAA,GAAH,yGAOJE,EAAWF,EAAAA,GAAAA,GAAH,sHAQRG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,0JAUVK,EAAeL,EAAAA,GAAAA,IAAH,2E,gLC7BZM,EAAgBN,EAAAA,GAAAA,IAAH,sFAMbO,EAAiBP,EAAAA,GAAAA,IAAH,4CAIdQ,EAAaR,EAAAA,GAAAA,GAAH,4EAMVS,GAAWT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,yX,SC0DrB,EAlEqB,WAAO,IAAD,IACnBW,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnDC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE0BC,EAAAA,EAAAA,IAAkBN,GAF5C,gBAEWO,EAFX,EAEWA,KACRH,EAAgBG,GAHnB,gDAKGC,QAAQC,IAAR,MALH,wDAAD,EAQD,GAAE,CAACT,KAGF,8BACGG,IACC,4BACE,UAAC,KAAD,YACE,SAACX,EAAD,CAAUkB,GAAId,EAAoBe,QAAlC,SAA2C,aAC3C,UAACtB,EAAD,YACE,gBACEuB,IAAG,6CAAwCT,EAAaU,aACxDC,IAAKX,EAAaY,MAClBC,MAAM,SAER,UAAC1B,EAAD,YACE,0BACGa,EAAaY,MAAM,IAAEZ,EAAac,aAAaC,MAAM,EAAG,GAAG,QAE9D,yBAAG,cAAYC,KAAKC,MAAkC,GAA5BjB,EAAakB,cAAmB,QAC1D,wBAAI,cACJ,uBAAIlB,EAAamB,YACjB,wBAAI,YACJ,SAAC/B,EAAD,UACGY,EAAaoB,OAAOC,KAAI,SAAAC,GACvB,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACvB,gBAKT,UAAC,KAAD,YACE,wBAAI,4BACJ,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAYjB,GAAE,kBAAaV,EAAb,SAAd,SAA2C,YAE7C,SAAC,KAAD,WACE,SAAC,KAAD,CAAYU,GAAE,kBAAaV,EAAb,YAAd,SAA8C,qBAMpD,SAAC,EAAA4B,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,UAMX,C,8LC1EYC,EAAmB,mCAAG,uGAElBC,EAAAA,EAAAA,IACX,4FAH6B,8EAMzB,IAAIC,MAAM,KAAIC,SANW,wDAAH,qDAUnB3B,EAAiB,mCAAG,WAAMqB,GAAN,0FAEhBI,EAAAA,EAAAA,IAAA,6CAC2BJ,EAD3B,8CAFgB,8EAMvB,IAAIK,MAAM,KAAIC,SANS,wDAAH,sDAUjBC,EAAiB,mCAAG,WAAMP,GAAN,0FAEhBI,EAAAA,EAAAA,IAAA,6CAC2BJ,EAD3B,sDAFgB,8EAMvB,IAAIK,MAAM,KAAIC,SANS,wDAAH,sDAUjBE,EAAiB,mCAAG,WAAMR,GAAN,0FAEhBI,EAAAA,EAAAA,IAAA,6CAC2BJ,EAD3B,sDAFgB,8EAMvB,IAAIK,MAAM,KAAIC,SANS,wDAAH,sDAUjBG,EAAgB,mCAAG,WAAMC,GAAN,0FAEfN,EAAAA,EAAAA,IAAA,0DACwCM,EADxC,8CAFe,8EAMtB,IAAIL,MAAM,KAAIC,SANQ,wDAAH,qD","sources":["pages/Command.styled.js","pages/MovieDetails.styled.js","pages/MovieDetails.js","services/theMovieDB-API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  list-style: square;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  transition: color 250ms linear;\n  &:hover {\n    color: #0070ba;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  transition: color 250ms linear;\n  &:hover,\n  &.active {\n    color: #0070ba;\n  }\n`;\n\nexport const BlockWrapper = styled.div`\n  box-shadow: 0 2px 4px #8e8e8e;\n  padding: 20px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieInfoWrap = styled.div`\n  display: flex;\n  align-items: start;\n  margin-top: 10px;\n`;\n\nexport const AboutMovieWrap = styled.div`\n  padding: 0 20px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding-left: 0;\n`;\n\nexport const BackLink = styled(Link)`\n  border: 1px solid #8e8e8e;\n  padding: 0 10px;\n  border-radius: 10px;\n  background-color: #f0f0f0;\n  color: #000;\n  text-decoration: none;\n  transition: color 250ms linear, background-color 250ms linear,\n    border-color 250ms linear;\n  &:hover,\n  &.active {\n    background-color: #0070ba;\n    color: #fff;\n    border-color: #0070ba;\n  }\n`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/theMovieDB-API';\nimport { StyledLink, ListItem, List, BlockWrapper } from './Command.styled';\nimport {\n  MovieInfoWrap,\n  AboutMovieWrap,\n  GenresList,\n  BackLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await fetchMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieDetails && (\n        <div>\n          <BlockWrapper>\n            <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n            <MovieInfoWrap>\n              <img\n                src={`https://image.tmdb.org/t/p/original${movieDetails.poster_path}`}\n                alt={movieDetails.title}\n                width=\"300\"\n              />\n              <AboutMovieWrap>\n                <h1>\n                  {movieDetails.title}({movieDetails.release_date.slice(0, 4)})\n                </h1>\n                <p>User Score {Math.round(movieDetails.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{movieDetails.overview}</p>\n                <h3>Genres</h3>\n                <GenresList>\n                  {movieDetails.genres.map(genre => {\n                    return <li key={genre.id}>{genre.name}</li>;\n                  })}\n                </GenresList>\n              </AboutMovieWrap>\n            </MovieInfoWrap>\n          </BlockWrapper>\n          <BlockWrapper>\n            <h3>Additional information</h3>\n            <List>\n              <ListItem>\n                <StyledLink to={`/movies/${movieId}/cast`}>Cast</StyledLink>\n              </ListItem>\n              <ListItem>\n                <StyledLink to={`/movies/${movieId}/reviews`}>\n                  Reviews\n                </StyledLink>\n              </ListItem>\n            </List>\n          </BlockWrapper>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=40e15dc62f9875135cfe2bf57a204366'\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=40e15dc62f9875135cfe2bf57a204366`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n"],"names":["Container","styled","List","ListItem","StyledLink","NavLink","BlockWrapper","MovieInfoWrap","AboutMovieWrap","GenresList","BackLink","Link","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useState","movieDetails","setMovieDetails","useEffect","fetchMovieDetails","data","console","log","to","current","src","poster_path","alt","title","width","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","fetchTrendingMovies","axios","Error","message","fetchMovieCredits","fetchMovieReviews","fetchMovieSearch","query"],"sourceRoot":""}