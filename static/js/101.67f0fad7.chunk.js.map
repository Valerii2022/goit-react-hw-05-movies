{"version":3,"file":"static/js/101.67f0fad7.chunk.js","mappings":"+QAEaA,EAAYC,EAAAA,GAAAA,IAAH,4CAITC,EAAOD,EAAAA,GAAAA,GAAH,kFAMJE,EAAWF,EAAAA,GAAAA,GAAH,+HAORG,EAAQH,EAAAA,GAAAA,EAAH,4G,SCqBlB,EAnCgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE0BC,EAAAA,EAAAA,IAAkBN,GAF5C,mBAG+B,KADpBO,EAFX,EAEWA,MACCC,QAAQC,OAHpB,yCAGyCL,EAAgBG,EAAKC,UAH9D,OAIGJ,EAAgB,MAJnB,kDAMGM,QAAQC,IAAR,MANH,yDAAD,EASD,GAAE,CAACX,KAGF,SAACL,EAAD,UACGQ,GACC,SAACN,EAAD,UACGM,EAAaS,KAAI,SAAAC,GAChB,OACE,UAACf,EAAD,YACE,UAACC,EAAD,WAAO,WAASc,EAAOC,WACvB,uBAAID,EAAOE,YAFEF,EAAOG,GAKzB,OAGH,SAACjB,EAAD,UAAO,+CAId,C,8LCrCKkB,EAAW,+BACXC,EAAU,mCAEHC,EAAmB,mCAAG,uGAAOC,EAAP,+BAAc,EAAd,kBAElBC,EAAAA,EAAAA,IAAA,UACRJ,EADQ,uCAC+BC,EAD/B,iBAC+CE,IAH7B,8EAMzB,IAAIE,MAAM,KAAIC,SANW,yDAAH,qDAUnBC,EAAiB,mCAAG,WAAMR,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BD,EAA/B,oBAA6CE,IAF7B,8EAIvB,IAAII,MAAM,KAAIC,SAJS,wDAAH,sDAQjBE,EAAiB,mCAAG,WAAMT,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,UACRJ,EADQ,kBACUD,EADV,4BACgCE,IAHhB,8EAMvB,IAAII,MAAM,KAAIC,SANS,wDAAH,sDAUjBjB,EAAiB,mCAAG,WAAMU,GAAN,0FAEhBK,EAAAA,EAAAA,IAAA,UACRJ,EADQ,kBACUD,EADV,4BACgCE,IAHhB,8EAMvB,IAAII,MAAM,KAAIC,SANS,wDAAH,sDAUjBG,EAAgB,mCAAG,WAAMC,GAAN,0FAEfN,EAAAA,EAAAA,IAAA,UACRJ,EADQ,+BACuBU,EADvB,oBACwCT,IAHzB,8EAMtB,IAAII,MAAM,KAAIC,SANQ,wDAAH,qD","sources":["components/Reviews/styled.js","components/Reviews/Reviews.jsx","services/theMovieDB-API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 16px 0;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 16px;\n  border: 1px solid #8e8e8e;\n  border-radius: 4px;\n  box-shadow: 0 0 4px #8e8e8e;\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  margin-bottom: 8px;\n  & span {\n    font-weight: 400;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/theMovieDB-API';\nimport { Title, List, ListItem, Container } from './styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await fetchMovieReviews(movieId);\n        if (data.results.length !== 0) return setMovieDetails(data.results);\n        setMovieDetails(null);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {movieDetails ? (\n        <List>\n          {movieDetails.map(review => {\n            return (\n              <ListItem key={review.id}>\n                <Title>Author: {review.author}</Title>\n                <p>{review.content}</p>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <Title>We don't have any reviews for this movie.</Title>\n      )}\n    </Container>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '40e15dc62f9875135cfe2bf57a204366';\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    return await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n"],"names":["Container","styled","List","ListItem","Title","movieId","useParams","useState","movieDetails","setMovieDetails","useEffect","fetchMovieReviews","data","results","length","console","log","map","review","author","content","id","BASE_URL","API_KEY","fetchTrendingMovies","page","axios","Error","message","fetchMovieDetails","fetchMovieCredits","fetchMovieSearch","query"],"sourceRoot":""}